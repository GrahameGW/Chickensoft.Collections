name: '📦 Publish'
on:
  workflow_dispatch:
    branches:
      - main
    inputs:
      bump:
        description: "Version Bump Method"
        type: choice
        options:
          - major
          - minor
          - patch
        required: true

jobs:
  publish:
    name: 📦 Publish
    runs-on: ubuntu-latest
    steps:
      - name: 🧾 Checkout
        uses: actions/checkout@v3
        with:
          lfs: true
          submodules: 'recursive'

      - name: 🔎 Read Current Project Verson
        uses: mavrosxristoforos/get-xml-info@1.0
        id: current-version
        with:
          xml-file: Chickensoft.GoDotCollections/Chickensoft.GoDotCollections.csproj
          xpath: /Project/PropertyGroup/Version

      - name: 🖨 Print Current Version
        run: |
          echo "Current Version: ${{ steps.publish.current-version.info }}"

      - name: 🧮 Compute Next Version
        uses:  chickensoft-games/next-godot-csproj-version@v1
        id: next-version
        with:
          project-version: ${{ steps.publish.current-version.info }}
          godot-version: 4.0.1
          bump: ${{ github.event.inputs.bump }}

      - name: ✨ Print Next Version
        run: |
          echo "Next Version: ${{ steps.publish.next-version.version }}"

      - name: 📝 Change Version
        uses: vers-one/dotnet-project-version-updater@v1.3
        with:
          file: "Chickensoft.GoDotCollections/Chickensoft.GoDotCollections.csproj"
          version:  ${{ steps.publish.next-version.version }}

      - name: ✍️ Commit Changes
        run: |
          git config user.name "action@github.com"
          git config user.email "GitHub Action"
          git add .
          git commit -m "chore(version): update version to ${{ steps.publish.next-version.version }}"
          git tag -a "v${{ steps.publish.next-version.version }}" -m "Version ${{ steps.publish.next-version.version }}"
          git push --follow-tags

      - uses: actions/setup-dotnet@v3
        name: 💽 Setup .NET SDK
        with:
          version: 6.0.407

      - name: 📦 Publish
        run: |
          # build the package
          dotnet build Chickensoft.GoDotCollections/Chickensoft.GoDotCollections.csproj -c Release

          # find the built nuget package
          nuget_package=$(find . -name "Chickensoft.GoDotCollections.*.nupkg")

          echo "📦 Publishing package: $nuget_package"

          # publish the nuget package
          dotnet nuget push "$nuget_package" --api-key ${{ secrets.NUGET_API_KEY }}  --source https://api.nuget.org/v3/index.json --skip-duplicate
